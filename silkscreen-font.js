// Silkscreen font data - 6px height bitmap font
// Each character is defined as an array of 6 rows (binary patterns)
const SILKSCREEN_CHARS = {
    'A': [0b01110, 0b10001, 0b10001, 0b11111, 0b10001, 0b10001],
    'B': [0b11110, 0b10001, 0b11110, 0b10001, 0b10001, 0b11110],
    'C': [0b01110, 0b10001, 0b10000, 0b10000, 0b10001, 0b01110],
    'D': [0b11110, 0b10001, 0b10001, 0b10001, 0b10001, 0b11110],
    'E': [0b11111, 0b10000, 0b11110, 0b10000, 0b10000, 0b11111],
    'F': [0b11111, 0b10000, 0b11110, 0b10000, 0b10000, 0b10000],
    'G': [0b01110, 0b10001, 0b10000, 0b10011, 0b10001, 0b01110],
    'H': [0b10001, 0b10001, 0b11111, 0b10001, 0b10001, 0b10001],
    'I': [0b111, 0b010, 0b010, 0b010, 0b010, 0b111],
    'J': [0b00111, 0b00010, 0b00010, 0b00010, 0b10010, 0b01100],
    'K': [0b10001, 0b10010, 0b11100, 0b10010, 0b10001, 0b10001],
    'L': [0b10000, 0b10000, 0b10000, 0b10000, 0b10000, 0b11111],
    'M': [0b1000001, 0b1100011, 0b1010101, 0b1000001, 0b1000001, 0b1000001],
    'N': [0b1000001, 0b1100001, 0b1010001, 0b1001001, 0b1000101, 0b1000011],
    'O': [0b01110, 0b10001, 0b10001, 0b10001, 0b10001, 0b01110],
    'P': [0b11110, 0b10001, 0b10001, 0b11110, 0b10000, 0b10000],
    'Q': [0b01110, 0b10001, 0b10001, 0b10101, 0b10010, 0b01101],
    'R': [0b11110, 0b10001, 0b10001, 0b11110, 0b10010, 0b10001],
    'S': [0b01110, 0b10001, 0b01000, 0b00110, 0b10001, 0b01110],
    'T': [0b11111, 0b00100, 0b00100, 0b00100, 0b00100, 0b00100],
    'U': [0b10001, 0b10001, 0b10001, 0b10001, 0b10001, 0b01110],
    'V': [0b1000001, 0b1000001, 0b0100010, 0b0100010, 0b0010100, 0b0001000],
    'W': [0b1000001, 0b1000001, 0b1000001, 0b1010101, 0b1100011, 0b1000001],
    'X': [0b1000001, 0b0100010, 0b0011100, 0b0011100, 0b0100010, 0b1000001],
    'Y': [0b1000001, 0b0100010, 0b0010100, 0b0001000, 0b0001000, 0b0001000],
    'Z': [0b11111, 0b00010, 0b00100, 0b01000, 0b10000, 0b11111],
    ' ': [0b0000, 0b0000, 0b0000, 0b0000, 0b0000, 0b0000],
    '0': [0b01110, 0b10011, 0b10101, 0b11001, 0b10001, 0b01110],
    '1': [0b0110, 0b1010, 0b0010, 0b0010, 0b0010, 0b11111],
    '2': [0b01110, 0b10001, 0b00010, 0b00100, 0b01000, 0b11111],
    '3': [0b01110, 0b10001, 0b00110, 0b00001, 0b10001, 0b01110],
    '4': [0b00010, 0b00110, 0b01010, 0b10010, 0b11111, 0b00010],
    '5': [0b11111, 0b10000, 0b11110, 0b00001, 0b10001, 0b01110],
    '6': [0b00110, 0b01000, 0b11110, 0b10001, 0b10001, 0b01110],
    '7': [0b11111, 0b00001, 0b00010, 0b00100, 0b01000, 0b10000],
    '8': [0b01110, 0b10001, 0b01110, 0b10001, 0b10001, 0b01110],
    '9': [0b01110, 0b10001, 0b10001, 0b01111, 0b00010, 0b01100],
    '!': [0b010, 0b010, 0b010, 0b010, 0b000, 0b010],
    '@': [0b0011110, 0b0100001, 0b0101101, 0b0101101, 0b0101110, 0b0011100],
    '#': [0b0010010, 0b0111111, 0b0010010, 0b0010010, 0b0111111, 0b0010010],
    '$': [0b01110, 0b10101, 0b10100, 0b01110, 0b00101, 0b10101],
    '%': [0b1100001, 0b1100010, 0b0000100, 0b0001000, 0b0010000, 0b1000011],
    '^': [0b00100, 0b01010, 0b10001, 0b00000, 0b00000, 0b00000],
    '&': [0b01100, 0b10010, 0b01100, 0b10101, 0b10010, 0b01101],
    '*': [0b0000000, 0b0010100, 0b0001000, 0b0111110, 0b0001000, 0b0010100],
    '(': [0b0010, 0b0100, 0b1000, 0b1000, 0b0100, 0b0010],
    ')': [0b0100, 0b0010, 0b0001, 0b0001, 0b0010, 0b0100],
    '_': [0b00000, 0b00000, 0b00000, 0b00000, 0b00000, 0b11111],
    '+': [0b0000000, 0b0001000, 0b0001000, 0b0111110, 0b0001000, 0b0001000],
    '`': [0b0100, 0b0010, 0b0000, 0b0000, 0b0000, 0b0000],
    '~': [0b00000, 0b01000, 0b10101, 0b00010, 0b00000, 0b00000],
    '[': [0b0111, 0b0100, 0b0100, 0b0100, 0b0100, 0b0111],
    ']': [0b1110, 0b0010, 0b0010, 0b0010, 0b0010, 0b1110],
    '\\': [0b10000, 0b01000, 0b00100, 0b00010, 0b00001, 0b00000],
    '{': [0b00110, 0b00100, 0b01000, 0b00100, 0b00100, 0b00110],
    '}': [0b01100, 0b00100, 0b00010, 0b00100, 0b00100, 0b01100],
    '|': [0b010, 0b010, 0b010, 0b010, 0b010, 0b010],
    ';': [0b0000, 0b0110, 0b0110, 0b0000, 0b0110, 0b0100],
    ':': [0b000, 0b110, 0b110, 0b000, 0b110, 0b110],
    '\'': [0b010, 0b010, 0b100, 0b000, 0b000, 0b000],
    '"': [0b01010, 0b01010, 0b10100, 0b00000, 0b00000, 0b00000],
    ',': [0b0000, 0b0000, 0b0000, 0b0110, 0b0110, 0b0100],
    '.': [0b000, 0b000, 0b000, 0b000, 0b110, 0b110],
    '/': [0b00001, 0b00010, 0b00100, 0b01000, 0b10000, 0b00000],
    '<': [0b00010, 0b00100, 0b01000, 0b10000, 0b01000, 0b00100],
    '>': [0b10000, 0b01000, 0b00100, 0b00010, 0b00100, 0b01000],
    '?': [0b01110, 0b10001, 0b00010, 0b00100, 0b00000, 0b00100],
    '=': [0b00000, 0b11111, 0b00000, 0b11111, 0b00000, 0b00000],
    '-': [0b00000, 0b00000, 0b11111, 0b00000, 0b00000, 0b00000],
};

// Create a font sprite canvas
function createSilkscreenSprite() {
    const canvas = document.createElement('canvas');
    canvas.width = 220;
    canvas.height = 20;
    const ctx = canvas.getContext('2d');

    // Make it black on transparent
    ctx.fillStyle = '#000000';

    // Draw each character at its defined position
    const charPositions = [
        // Row 1: A-Z and space
        ['A', 0, 0], ['B', 6, 0], ['C', 12, 0], ['D', 18, 0], ['E', 24, 0], ['F', 29, 0],
        ['G', 34, 0], ['H', 40, 0], ['I', 46, 0], ['J', 49, 0], ['K', 55, 0], ['L', 61, 0],
        ['M', 66, 0], ['N', 73, 0], ['O', 80, 0], ['P', 86, 0], ['Q', 92, 0], ['R', 98, 0],
        ['S', 104, 0], ['T', 110, 0], ['U', 115, 0], ['V', 121, 0], ['W', 128, 0], ['X', 135, 0],
        ['Y', 142, 0], ['Z', 149, 0], [' ', 154, 0],
        // Row 2: Numbers and symbols
        ['1', 0, 10], ['2', 5, 10], ['3', 11, 10], ['4', 17, 10], ['5', 23, 10], ['6', 29, 10],
        ['7', 35, 10], ['8', 41, 10], ['9', 47, 10], ['0', 53, 10],
        ['!', 59, 10], ['@', 62, 10], ['#', 69, 10], ['$', 76, 10], ['%', 82, 10], ['^', 89, 10],
        ['&', 94, 10], ['*', 100, 10], ['(', 107, 10], [')', 111, 10], ['_', 115, 10], ['+', 121, 10],
        ['`', 128, 10], ['~', 132, 10], ['[', 138, 10], [']', 142, 10], ['\\', 146, 10], ['{', 151, 10],
        ['}', 156, 10], ['|', 161, 10], [';', 164, 10], [':', 168, 10], ['\'', 171, 10], ['"', 174, 10],
        [',', 179, 10], ['.', 183, 10], ['/', 186, 10], ['<', 191, 10], ['>', 196, 10], ['?', 201, 10],
        ['=', 207, 10], ['-', 207, 10]
    ];

    for (let [char, x, y] of charPositions) {
        if (SILKSCREEN_CHARS[char]) {
            drawChar(ctx, SILKSCREEN_CHARS[char], x, y);
        }
    }

    return canvas;
}

function drawChar(ctx, bitmap, startX, startY) {
    for (let row = 0; row < 6; row++) {
        let rowData = bitmap[row];
        let bit = 0;
        let x = startX;

        // Calculate how many bits we need to check
        let maxBits = rowData.toString(2).length;

        for (let col = maxBits - 1; col >= 0; col--) {
            if (rowData & (1 << col)) {
                ctx.fillRect(x, startY + row, 1, 1);
            }
            x++;
        }
    }
}

// Export for use in main script
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { createSilkscreenSprite, SILKSCREEN_CHARS };
}


